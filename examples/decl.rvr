proc main
	var x := 0
	var y := 1
	do print: "hello world"
	x <> y
	x -= 1
	y += 1
	y := 1
	drop y := 0
	drop x := 0
end

proc p
	if a = 0
		do x
	else if a = 1
		do y
	else
		do z
	fi
	fi
end proc p

proc print_file(path: int)
	var bytes := 80
	var file := nil
	var buf := nil
	
	do load: path, file
	do take: file, buf, bytes
	do print: buf, bytes
	undo load: path, file
	
	drop buf := nil
	drop file := nil
	drop bytes := 80
end

fn succ(x: int): int
	let y = x + 1
	y
end

proc divmod(n: int, var x: int, var div: int)
    from div = 0
        x -= n
        div += 1
    until x < n
    end
end
